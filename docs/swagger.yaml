definitions:
  models.ChatMessage:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      role:
        description: user, assistant, system
        enum:
        - user
        - assistant
        - system
        type: string
      session_id:
        type: string
    required:
    - content
    - role
    type: object
  models.ChatRequest:
    properties:
      message:
        type: string
      session_id:
        type: string
    required:
    - message
    type: object
  models.ChatResponse:
    properties:
      message:
        type: string
      session_id:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      hash_password:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      user_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /chat:
    post:
      consumes:
      - application/json
      description: 发送消息到AI并获取回复
      parameters:
      - description: 聊天请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/models.ChatResponse'
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 发送聊天消息
  /chat/history/{session_id}:
    get:
      description: 获取特定会话的聊天历史
      parameters:
      - description: 会话ID
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/models.ChatMessage'
            type: array
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 获取聊天历史
  /chat/stream:
    post:
      consumes:
      - application/json
      description: 流式发送消息到AI并获取实时回复
      parameters:
      - description: 聊天请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ChatRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: 成功
          schema:
            type: string
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 流式发送聊天消息
  /test:
    get:
      description: 测试AI服务是否正常工作
      parameters:
      - description: 测试消息
        in: query
        name: msg
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 测试AI服务
  /user:
    get:
      description: 获取所有用户的信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 获取所有用户
    post:
      consumes:
      - application/json
      description: 创建一个新的用户
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 创建用户
  /user/{id}:
    delete:
      description: 根据用户ID删除用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            type: string
        "400":
          description: 请求错误
          schema:
            type: string
        "404":
          description: 用户未找到
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 删除用户
    get:
      description: 根据用户ID获取用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: 请求错误
          schema:
            type: string
        "404":
          description: 用户未找到
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 获取用户信息
    put:
      consumes:
      - application/json
      description: 根据用户ID更新用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: 请求错误
          schema:
            type: string
        "404":
          description: 用户未找到
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 更新用户信息
swagger: "2.0"
